{"ast":null,"code":"import _classCallCheck from \"/home/franki/react-state-managment/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/franki/react-state-managment/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/franki/react-state-managment/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/franki/react-state-managment/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/franki/react-state-managment/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/franki/react-state-managment/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/franki/react-state-managment/src/Counter.js\";\nimport React, { Component } from 'react';\n\nvar getStateFromLocalStorage = function getStateFromLocalStorage() {\n  var storage = localStorage.getItem('counterState');\n  if (storage) return JSON.parse(storage);\n  return {\n    count: 0\n  };\n};\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter(props) {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Counter).call(this, props));\n    _this.state = {\n      count: 0\n    };\n    _this.state = getStateFromLocalStorage();\n    _this.increment = _this.increment.bind(_assertThisInitialized(_this));\n    _this.decrement = _this.decrement.bind(_assertThisInitialized(_this));\n    _this.reset = _this.reset.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"increment\",\n    value: function increment() {\n      var _this2 = this;\n\n      this.setState(function (state, props) {\n        var max = props.max,\n            step = props.step;\n        if (state.count >= max) return;\n        return {\n          count: state.count + step\n        };\n      }, function () {\n        localStorage.setItem('counterStorage', JSON.stringify(_this2.state));\n      });\n      console.log('before', this.state);\n    }\n  }, {\n    key: \"decrement\",\n    value: function decrement() {\n      this.setState({\n        count: this.state.count - 1\n      });\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.setState({\n        count: 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var count = this.state.count;\n      return React.createElement(\"main\", {\n        className: \"Counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, count), React.createElement(\"section\", {\n        className: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.increment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Increment\"), React.createElement(\"button\", {\n        onClick: this.decrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Decrement\"), React.createElement(\"button\", {\n        onClick: this.reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Reset\")));\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/home/franki/react-state-managment/src/Counter.js"],"names":["React","Component","getStateFromLocalStorage","storage","localStorage","getItem","JSON","parse","count","Counter","props","state","increment","bind","decrement","reset","setState","max","step","setItem","stringify","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrC,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAhB;AACA,MAAGF,OAAH,EAAY,OAAOG,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAP;AACZ,SAAO;AAACK,IAAAA,KAAK,EAAE;AAAR,GAAP;AACD,CAJD;;IAMMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXH,MAAAA,KAAK,EAAE;AADI,KAAb;AAGA,UAAKG,KAAL,GAAaT,wBAAwB,EAArC;AAEA,UAAKU,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,+BAAjB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,+BAAjB;AACA,UAAKE,KAAL,GAAa,MAAKA,KAAL,CAAWF,IAAX,+BAAb;AATiB;AAUlB;;;;gCAEW;AAAA;;AACV,WAAKG,QAAL,CAAc,UAACL,KAAD,EAAQD,KAAR,EAAkB;AAAA,YACtBO,GADsB,GACRP,KADQ,CACtBO,GADsB;AAAA,YACjBC,IADiB,GACRR,KADQ,CACjBQ,IADiB;AAE9B,YAAGP,KAAK,CAACH,KAAN,IAAeS,GAAlB,EAAuB;AACvB,eAAO;AAAET,UAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAcU;AAAvB,SAAP;AACH,OAJC,EAKH,YAAM;AACJd,QAAAA,YAAY,CAACe,OAAb,CAAqB,gBAArB,EAAuCb,IAAI,CAACc,SAAL,CAAe,MAAI,CAACT,KAApB,CAAvC;AACA,OAPC;AASHU,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKX,KAA3B;AACA;;;gCAGa;AACV,WAAKK,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAE,KAAKG,KAAL,CAAWH,KAAX,GAAmB;AAA5B,OAAd;AACD;;;4BAEO;AACN,WAAKQ,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD;;;6BAEQ;AAAA,UACCA,KADD,GACW,KAAKG,KADhB,CACCH,KADD;AAGP,aACE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBA,KAAtB,CADF,EAEE;AAAS,QAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKI,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAQ,QAAA,OAAO,EAAE,KAAKE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE;AAAQ,QAAA,OAAO,EAAE,KAAKC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CAFF,CADF;AAUD;;;;EAhDmBd,S;;AAmDtB,eAAeQ,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nconst getStateFromLocalStorage = () => {\n  const storage = localStorage.getItem('counterState');\n  if(storage) return JSON.parse(storage);\n  return {count: 0};\n}\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n    };\n    this.state = getStateFromLocalStorage();\n\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  increment() {\n    this.setState((state, props) => {\n      const { max, step } = props; \n      if(state.count >= max) return;\n      return { count: state.count + step};        \n  },\n () => {\n   localStorage.setItem('counterStorage', JSON.stringify(this.state))\n  },\n );\n console.log('before', this.state)\n}\n    \n\n  decrement() {\n    this.setState({ count: this.state.count - 1 });\n  }\n\n  reset() {\n    this.setState({ count: 0 });\n  }\n\n  render() {\n    const { count } = this.state;\n\n    return (\n      <main className=\"Counter\">\n        <p className=\"count\">{count}</p>\n        <section className=\"controls\">\n          <button onClick={this.increment}>Increment</button>\n          <button onClick={this.decrement}>Decrement</button>\n          <button onClick={this.reset}>Reset</button>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}